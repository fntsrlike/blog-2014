<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[深藏若虛]]></title>
  <link href="http://blog.fntsr.tw/atom.xml" rel="self"/>
  <link href="http://blog.fntsr.tw/"/>
  <updated>2014-11-01T03:26:00+08:00</updated>
  <id>http://blog.fntsr.tw/</id>
  <author>
    <name><![CDATA[Ruoshi Ling]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Use Docker Data Volume on OS X]]></title>
    <link href="http://blog.fntsr.tw/articles/2014/10/31/use-docker-data-volume-on-os-x/"/>
    <updated>2014-10-31T22:05:15+08:00</updated>
    <id>http://blog.fntsr.tw/articles/2014/10/31/use-docker-data-volume-on-os-x</id>
    <content type="html"><![CDATA[<h2>在 OS X 上，透過 boot2docker 使用 docker 的 data volume</h2>

<p>Docker 1.3 在 2014-10-16 釋出。其中，在方便性上最讓人注目的更新，除了 exec 指令以外，就是 boot2docker 在 Mac OS X 資料夾分享功能的改進，本文主要是針對後者去做講述。</p>

<!-- more -->


<h1>前言</h1>

<p>由於 Docker 只支持 Linux 作業系統，倘若要於 OS X 使用 Docker ，會使用 boot2docker 這個工具，在 VirtualBox 上建立一個 boot2docker-vm 的映像檔。然後，透過這個 Linux VM 去操作 Docker。</p>

<p>但是，在 Docker 1.3 之前，因為 boot2docker 的映像檔沒有支援 VirtualBox Guest Additions ，所以無法使用 Virtualbox 分享資料夾的功能，將 OS X 的資料夾掛載到虛擬機器裡。因此必須另外自行製作有支援該 VirtualBox Guest Additions 的映像檔（或是下載別人做好的），然後設定 Virtual Box ，把 OS X 的資料夾自動掛載到虛擬機器裡。</p>

<p>不過，隨著 Docker 1.3 釋出，boot2docker 也一併將這個功能引入。使用者可以直接透過 boot2docker 的映像檔使用這功能，而且它會自動把 <code>/Users</code> 資料夾掛載到虛擬機器裡，不需要另外設定！</p>

<p>下圖是在 OS X 上，使用 boot2docker 建立 data volume 的示意圖，希望能幫助各位了解運作原理。</p>

<p><a href="http://blog.fntsr.tw/images/posts/2014-10-31-use-docker-data-volume-on-os-x-001.png"><img src="http://blog.fntsr.tw/images/posts/2014-10-31-use-docker-data-volume-on-os-x-001.png" width="512" height="384"></a></p>

<h1>前置作業</h1>

<p>在開始前，必須先安裝或更新 docker 和 boot2docker 到 1.30 以上的版本，更新的方法在我前一篇文章 <a href="http://blog.fntsr.tw/articles/2014/10/31/upgrade-docker-and-boot2docker-on-os-x/">Upgrade Docker and Boot2docker on OS X</a> 已經說明了，可以參考看看，這邊就不多贅述。</p>

<p>接著在 Terminal 下 <code>$ boot2docker ssh 'ls -al /Users'</code> 的指令，確認是否已經成功掛載。如果成功，應該會出現 <code>/Users</code> 的目錄。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>boot2docker ssh <span class="s1">&#39;ls -al /Users&#39;</span>
</span><span class='line'>drwxr-xr-x    <span class="m">1</span> docker   staff          <span class="m">204</span> Mar <span class="m">29</span>  <span class="m">2014</span> .
</span><span class='line'>drwxr-xr-x   <span class="m">17</span> root     root           <span class="m">400</span> Oct <span class="m">31</span> 10:29 ..
</span><span class='line'>-rw-r--r--    <span class="m">1</span> docker   staff            <span class="m">0</span> Aug <span class="m">25</span>  <span class="m">2013</span> .localized
</span><span class='line'>drwxrwxrwx    <span class="m">1</span> docker   staff          <span class="m">306</span> Oct <span class="m">18</span> 04:08 Shared
</span><span class='line'>drwxr-xr-x    <span class="m">1</span> docker   staff         <span class="m">3774</span> Oct <span class="m">31</span> 17:52 user5566
</span></code></pre></td></tr></table></div></figure>


<h1>Data Volume</h1>

<p>本文利用 ubuntu 的 images 去做建立 data volume 的示範。開始前，再次強調，因為 boot2docker 只有把 OS X 的 <code>/Users</code> 資料夾掛載到虛擬機上，所以 data volume 的 host 資料夾必須在 <code>/Users</code> 底下。</p>

<h3>首先</h3>

<p>把想建立 data volume 的資料夾與檔案準備好。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir ~/docker-volume/test
</span><span class='line'><span class="nv">$ </span>touch ~/docker-volume/test/volume-test.md
</span><span class='line'><span class="nv">$ </span>ls -al ~/docker-volume/test
</span><span class='line'>total 0
</span><span class='line'>drwxr-xr-x  <span class="m">3</span> user5566  staff  <span class="m">102</span> <span class="m">11</span>  <span class="m">1</span> 02:01 .
</span><span class='line'>drwxr-xr-x  <span class="m">3</span> user5566  staff  <span class="m">102</span> <span class="m">11</span>  <span class="m">1</span> 02:01 ..
</span><span class='line'>-rw-r--r--  <span class="m">1</span> user5566  staff    <span class="m">0</span> <span class="m">11</span>  <span class="m">1</span> 02:01 volume-test.md
</span></code></pre></td></tr></table></div></figure>


<h3>接著</h3>

<p>建立一個 Container 。</p>

<p>並且，將剛才建立的資料夾，透過 data volume 掛載到 <code>/volume_test</code> 的位置。並且確認是否成功。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 建立 Container</span>
</span><span class='line'><span class="nv">$ </span>docker run -it -v ~/docker-volume/test:/volume_test ubuntu:latest /bin/bash
</span><span class='line'>root@d0d097097657:/#
</span><span class='line'>
</span><span class='line'><span class="c"># 測試 data volume 是否成功</span>
</span><span class='line'>root@d0d097097657:/# ls -al /volume_test/
</span><span class='line'>total 4
</span><span class='line'>drwxr-xr-x  <span class="m">1</span> <span class="m">1000</span> staff  <span class="m">102</span> Oct <span class="m">31</span>  <span class="m">2014</span> ./
</span><span class='line'>drwxr-xr-x <span class="m">50</span> root root  <span class="m">4096</span> Oct <span class="m">31</span> 17:51 ../
</span><span class='line'>-rw-r--r--  <span class="m">1</span> <span class="m">1000</span> staff    <span class="m">0</span> Oct <span class="m">31</span>  <span class="m">2014</span> volume-test.md
</span></code></pre></td></tr></table></div></figure>


<h3>最後</h3>

<p>在 OS X 和 Container 中，都建立一個檔案，以測試同步與否。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># OS X</span>
</span><span class='line'><span class="nv">$ </span>touch ~/docker-volume/test/file-from-osx.md
</span><span class='line'>
</span><span class='line'><span class="c"># Container</span>
</span><span class='line'>root@d0d097097657:/# touch /volume_test/file-from-container.md
</span></code></pre></td></tr></table></div></figure>


<p>看起來是成功了，歡呼囉！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># OS X 確認</span>
</span><span class='line'><span class="nv">$ </span>ls -al ~/docker-volume/test
</span><span class='line'>total 0
</span><span class='line'>drwxr-xr-x  <span class="m">5</span> fntsr  staff   170B <span class="m">11</span>  <span class="m">1</span> 02:12 .
</span><span class='line'>drwxr-xr-x  <span class="m">3</span> fntsr  staff   102B <span class="m">11</span>  <span class="m">1</span> 02:01 ..
</span><span class='line'>-rw-r--r--  <span class="m">1</span> fntsr  staff     0B <span class="m">11</span>  <span class="m">1</span> 01:58 file-from-container.md
</span><span class='line'>-rw-r--r--  <span class="m">1</span> fntsr  staff     0B <span class="m">11</span>  <span class="m">1</span> 02:12 file-from-osx.md
</span><span class='line'>-rw-r--r--  <span class="m">1</span> fntsr  staff     0B <span class="m">11</span>  <span class="m">1</span> 02:01 volume-test.md
</span><span class='line'>
</span><span class='line'><span class="c"># Container 確認</span>
</span><span class='line'>root@d0d097097657:/# ls -al /volume_test/
</span><span class='line'>total 4
</span><span class='line'>drwxr-xr-x  <span class="m">1</span> <span class="m">1000</span> staff  <span class="m">170</span> Oct <span class="m">31</span>  <span class="m">2014</span> .
</span><span class='line'>drwxr-xr-x <span class="m">50</span> root root  <span class="m">4096</span> Oct <span class="m">31</span> 17:51 ..
</span><span class='line'>-rw-r--r--  <span class="m">1</span> <span class="m">1000</span> staff    <span class="m">0</span> Oct <span class="m">31</span> 17:58 file-from-container.md
</span><span class='line'>-rw-r--r--  <span class="m">1</span> <span class="m">1000</span> staff    <span class="m">0</span> Oct <span class="m">31</span>  <span class="m">2014</span> file-from-osx.md
</span><span class='line'>-rw-r--r--  <span class="m">1</span> <span class="m">1000</span> staff    <span class="m">0</span> Oct <span class="m">31</span>  <span class="m">2014</span> volume-test.md
</span></code></pre></td></tr></table></div></figure>


<h1>後記</h1>

<p>Data Volume 是 docker 在應用 LXC 一個非常重要的功能。在初學 Docker 前，因為不懂 boot2docker 的運作原理，在這功能鬼打牆好多次，都無法成功。後來知道原理後，卻覺得在 OS X 實作這功能太麻煩了，改用 VPS 去玩 Docker 。還好，現在 boot2docker 已經做好這件事了，讓我們可以更快樂的在 OS X 上面玩 Docker ，尤其是進行開發啦！(rock)</p>

<p>剛好這塊是我在 <a href="http://blog.fntsr.tw/articles/2014/10/18/how-to-deploy-php-projects-with-docker/">PHPConf 演講</a> 裡，只有稍微帶過的部分，希望這篇文章能補足當時因為時間關係而沒講明的部分。在之後，我也會把握空閒時間，多寫幾篇有關 Docker 的文章，補足演講的缺口，希望大家會喜歡。 =D</p>

<p>最後，祝各位在 OS X 上，愜意地 Docker 囉！</p>

<h1>Reference</h1>

<ul>
<li><a href="https://medium.com/boot2docker-lightweight-linux-for-docker/boot2docker-together-with-virtualbox-guest-additions-da1e3ab2465c">boot2docker together with VirtualBox Guest Additions: How to mount /Users into boot2docker</a></li>
<li><a href="https://docs.docker.com/userguide/dockervolumes/">Managing Data in Containers</a></li>
<li><a href="https://blog.docker.com/2014/10/docker-1-3-signed-images-process-injection-security-options-mac-shared-directories/">DOCKER 1.3: SIGNED IMAGES, PROCESS INJECTION, SECURITY OPTIONS, MAC SHARED DIRECTORIES</a></li>
<li><a href="https://github.com/boot2docker/boot2docker">boot2docker/boot2docker</a></li>
<li><a href="https://github.com/boot2docker/boot2docker/issues/282#issuecomment-44601104">Volumes: vboxguest + vboxsf modules #282</a></li>
<li><a href="https://www.facebook.com/groups/docker.taipei/permalink/1522080854693939/">Post of Docker.Taipei</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrade Docker and Boot2docker on OS X]]></title>
    <link href="http://blog.fntsr.tw/articles/2014/10/31/upgrade-docker-and-boot2docker-on-os-x/"/>
    <updated>2014-10-31T17:59:58+08:00</updated>
    <id>http://blog.fntsr.tw/articles/2014/10/31/upgrade-docker-and-boot2docker-on-os-x</id>
    <content type="html"><![CDATA[<h2>在 OS X 更新 Docker 和 Boot2docker</h2>

<p>在 OS X 安裝 Docker 和 Boot2docker 有兩種方式，一種是下載 *.pkg 進行安裝，一種是使用 homebrew 進行安裝。本文前面會描述兩者更新的方式，然後說明如何把 Boot2docker 的 VM Image 更新，也就是把 Docker Server 更新到新版。</p>

<!-- more -->


<h2>Step1: Turn Off Boot2docker</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>boot2docker stop
</span></code></pre></td></tr></table></div></figure>


<h2>Step2: Upgrade Boot2docker</h2>

<p>依照您安裝 boot2docker 的方式進行更新</p>

<h4>Homebrew</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew update
</span><span class='line'><span class="nv">$ </span>brew upgrade docker
</span><span class='line'><span class="nv">$ </span>brew upgrade boot2docker
</span></code></pre></td></tr></table></div></figure>


<h4>Packge Installer</h4>

<ol>
<li>到 <a href="https://github.com/boot2docker/osx-installer/releases">boot2docker/osx-installer</a> 下載最新版本的安裝檔。</li>
<li>點擊安裝檔進行安裝。</li>
</ol>


<h2>Step3: Upgrade Boot2docker Image</h2>

<p>按照「正常程序」升級映像檔即可。</p>

<p>官網是說如果你是 <code>0.11.1-pre1</code> 之前的版本，建議刪除原有映像檔，但是這已經是很早之前的版本了。所以除非有什麼無法升級的意外，才需要「刪除原有映像檔」的方式更新。</p>

<h4>正常程序</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>boot2docker stop
</span><span class='line'><span class="nv">$ </span>boot2docker download
</span><span class='line'><span class="nv">$ </span>boot2docker up
</span></code></pre></td></tr></table></div></figure>


<h4>刪除原有映像檔</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>boot2docker stop
</span><span class='line'><span class="nv">$ </span>boot2docker delete     // 注意：本指令會刪除現有的VM映像檔
</span><span class='line'><span class="nv">$ </span>boot2docker download
</span><span class='line'><span class="nv">$ </span>boot2docker init
</span><span class='line'><span class="nv">$ </span>boot2docker up
</span></code></pre></td></tr></table></div></figure>


<h2>Step4: Check Version</h2>

<p>確認你的版本是否都為最新版了。寫本文時最新版是1.3.0。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>boot2docker version
</span><span class='line'>Boot2Docker-cli version: v1.3.0
</span><span class='line'>Git commit: deafc19
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>docker version
</span><span class='line'>Client version: 1.3.0
</span><span class='line'>Client API version: 1.15
</span><span class='line'>Go version <span class="o">(</span>client<span class="o">)</span>: go1.3.3
</span><span class='line'>Git commit <span class="o">(</span>client<span class="o">)</span>: c78088f
</span><span class='line'>OS/Arch <span class="o">(</span>client<span class="o">)</span>: darwin/amd64
</span><span class='line'>Server version: 1.3.1
</span><span class='line'>Server API version: 1.15
</span><span class='line'>Go version <span class="o">(</span>server<span class="o">)</span>: go1.3.3
</span><span class='line'>Git commit <span class="o">(</span>server<span class="o">)</span>: 4e9bbfa
</span></code></pre></td></tr></table></div></figure>


<h2>Reference</h2>

<ol>
<li><a href="http://docs.docker.com/installation/mac/#upgrading">Installing Docker on Mac OS X #Upgrading</a></li>
<li><a href="http://blog.javabien.net/2014/03/17/upgrade-docker-and-boot2docker-on-osx/">UPGRADE DOCKER AND BOOT2DOCKER ON OSX</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Challenge of Interdisciplinary Learning]]></title>
    <link href="http://blog.fntsr.tw/articles/2014/10/31/challenge-of-interdisciplinary-learning/"/>
    <updated>2014-10-31T15:29:55+08:00</updated>
    <id>http://blog.fntsr.tw/articles/2014/10/31/challenge-of-interdisciplinary-learning</id>
    <content type="html"><![CDATA[<h2>跨領域學習的挑戰</h2>

<p>十月結束了，開學已有三旬半月，<br/>
第一次感受到自己對新生活上，調試得極度不適應。<br/></p>

<p>研究生生活。<br/></p>

<!-- more -->


<h3>困境</h3>

<p>從歷史系跳到資工系軟工所，仍有一個很大的鴻溝，<br/>
儘管我名義上已經踏入了，但是學識上仍浮載浮沈。<br/>
或許，是我之前太過於樂觀，以為自己實作的經驗能替我克服，<br/>
深刻體驗後，卻深深感受到許多沮喪與挫折。<br/></p>

<p>在理論上，我是有太多不足需要補齊。<br/>
尤其是數學面向，一向是我的罩門，此時更倍感艱辛，<br/>
面對應用密碼學和各演算法，我感到被高牆籠罩的壓迫。<br/></p>

<p>在報 Paper 這件事，也是重重打擊了自己，<br/>
原本以為在時間內能完成，隨著時間逼近，越是慌亂。<br/>
還好，可能是因為第一次報論文，才沒被盯到牆上。<br/>
但是這種上台充滿著焦慮與沒信心的感受，<br/>
卻也讓我感到丟臉與沮喪，和之前在PHPConf的感受大相徑庭。<br/></p>

<p>這些日子以來，讓我缺乏時間管理的弱點，暴露得更明顯。<br/>
做事喜歡隨心而起的個性，也讓我每件事都有做，卻都做不好。<br/>
一直在事情沒做完與做不好的恐懼下度過。<br/></p>

<p>我是知道會這樣的，<br/>
只是真的在這些事發生時，才發現自己根本心理建設不夠。<br/></p>

<h3>別日</h3>

<p>我很懷念以前在歷史系時，<br/>
偶爾讀讀歷史，然後自由時間都玩資訊的時光，<br/>
儘管不用太認真上課，卻也能夠遊刃有餘的Pass每科考試。<br/>
（儘管分數不高，但讀考試時卻也很開心）<br/></p>

<p>但我已經無法再用這種態度面對自己現在的生活了，<br/>
其實這也是理所當然的。<br/></p>

<p>我好想繼續鑽研自己喜歡的技術，去實作自己想做的作品，<br/>
但是我現在讓自己走了這條路，這些事已經不能當作主要目標，<br/>
心裡充滿了許多矛盾。<br/></p>

<p>有太多事情無法再用過去的生活方式去面對，<br/>
我也沒有太多時間埋手在過去的時光，<br/>
而必須認真思考，思考我該怎麼做，怎麼改變。<br/></p>

<h3>面對</h3>

<p>研究生生活兩年，其實不長，<br/>
卻也是能讓人洗髓、脫胎換骨。<br/></p>

<p>我可以選擇繼續逃避，整日在惶恐或焦慮中度過，<br/>
然後兩年後勉強頂一個碩士頭銜，卻不一定名副其實。<br/></p>

<p>那我幹麻浪費兩年時間讀研究所？愚蠢至極。<br/></p>

<p>我要做的事情就是面對，<br/>
去想辦法，去調試，去做規劃，去取捨。<br/></p>

<p>這條路是我選的，就是要去充實原本自己不熟的理論層面，<br/>
都知道是不熟的，會遇到困境是正常的，會挫折和沮喪也是，<br/>
但是，不應該被這些負面情緒佔據太久。<br/></p>

<p>我會嘗試去面對與克服，去改變。<br/>
期許自己，兩年後，能夠滿意自己這兩年的努力與進步。<br/></p>

<p>2014-10-31，寫於聖誕節之時，若虛。<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Deploy PHP Projects With Docker]]></title>
    <link href="http://blog.fntsr.tw/articles/2014/10/18/how-to-deploy-php-projects-with-docker/"/>
    <updated>2014-10-18T17:00:00+08:00</updated>
    <id>http://blog.fntsr.tw/articles/2014/10/18/how-to-deploy-php-projects-with-docker</id>
    <content type="html"><![CDATA[<p>本簡報是為PHPConf2014議程所準備的，但陸續會在針對簡報做維護，並且在這邊回答會眾對於當天大會聽講但是沒有聽懂的部分。</p>

<ul>
<li>影片： (請耐心等候主辦單位釋出)</li>
<li>簡報： <a href="https://speakerdeck.com/fntsrlike/how-to-deploy-php-projects-with-docker">SpeakerDeck</a> | <a href="http://www.slideshare.net/ruoshiling/how-to-deploy-php-projects-with-docker">SlideShare</a></li>
</ul>


<div style="width:400px;">
<script async class="speakerdeck-embed" data-id="4be222a03e440132e5ed2a2ba31f9bce" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>
</div>


<!-- more -->


<h2>Updated Log</h2>

<h3>2014-10-25 Sat. | v2.1</h3>

<ul>
<li>因為SpeakDeck原本的項目一直無法轉檔成功，於是另外再開一個項目重新上傳，網址不變。</li>
</ul>


<h3>2014-10-24 Fri. | v2</h3>

<ul>
<li>修正演講時發現的小錯。</li>
<li>補上缺少的Expose Port的投影片。</li>
</ul>


<h2>Q &amp; A</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Text 2]]></title>
    <link href="http://blog.fntsr.tw/articles/2013/12/15/sublime-text-2/"/>
    <updated>2013-12-15T15:03:12+08:00</updated>
    <id>http://blog.fntsr.tw/articles/2013/12/15/sublime-text-2</id>
    <content type="html"><![CDATA[<h2>Sublime Text 2</h2>

<p>ST2是我在Programming時必備的編輯器（Editor），從原本使用Notepad++跳槽到ST2，變回不去了，更遑論筆電換成Mac後，更是確定使用ST2作為我的開發利器（雖然也不是不會使用神器Vim，但是很多快捷鍵還不熟，通常只有在連線到server才會用ＸＤ）。而在處理MBA2013年中升級到OS X 10.9的續航問題而嘗試重新安裝OS後，便利用這機會，把我有關ST2的相關設定作為筆記寫成這篇文章囉。</p>

<h2>為什麼使用ST2</h2>

<h3>我的理由：</h3>

<ul>
<li><strong>跨平台。</strong>Linux, OS X, Windows皆有支援。</li>
<li><strong>配色佳。</strong>尤愛預設的Monokai Color Scheme，深底色會讓眼睛舒適。</li>
<li><strong>套件多。</strong>豐富的套件與簡單好用的套件管理器，讓我簡單擴充我想要的功能。</li>
<li><strong>自訂強。</strong>非常彈性與強大的自訂設定，讓我打造屬於自己的編輯器。</li>
</ul>


<h3>ST設計原則：</h3>

<ul>
<li>專注在文字與程式碼上，而不是讓人眼花撩亂的工具列；</li>
<li>對話框訊息不使用晦澀難懂的文字；</li>
<li>善用螢幕的每個空間，使全螢幕、多螢幕模式一起編輯檔案，儘可能很容易</li>
</ul>


<!-- more -->


<h2>下載</h2>

<p>下載頁面：<a href="http://www.sublimetext.com/2">http://www.sublimetext.com/2</a>
因為ST3在此時還在Beta，有些套件可能仍還未升級到可以支援ST3，所以本人還是繼續使用ST2。</p>

<h2>套件（Packages）</h2>

<h3>安裝套件管理器</h3>

<p>Ctrl + ` 呼叫 Console（控制台），然後輸入以下Script（腳本），並且送出：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">urllib2</span><span class="o">,</span><span class="nn">os</span><span class="p">;</span> <span class="n">pf</span><span class="o">=</span><span class="s">&#39;Package Control.sublime-package&#39;</span><span class="p">;</span> <span class="n">ipp</span><span class="o">=</span><span class="n">sublime</span><span class="o">.</span><span class="n">installed_packages_path</span><span class="p">();</span> <span class="n">os</span><span class="o">.</span><span class="n">makedirs</span><span class="p">(</span><span class="n">ipp</span><span class="p">)</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">ipp</span><span class="p">)</span> <span class="k">else</span> <span class="bp">None</span><span class="p">;</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">install_opener</span><span class="p">(</span><span class="n">urllib2</span><span class="o">.</span><span class="n">build_opener</span><span class="p">(</span><span class="n">urllib2</span><span class="o">.</span><span class="n">ProxyHandler</span><span class="p">()));</span> <span class="nb">open</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">ipp</span><span class="p">,</span><span class="n">pf</span><span class="p">),</span><span class="s">&#39;wb&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&#39;http://sublime.wbond.net/&#39;</span><span class="o">+</span><span class="n">pf</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">,</span><span class="s">&#39;%20&#39;</span><span class="p">))</span><span class="o">.</span><span class="n">read</span><span class="p">());</span> <span class="k">print</span><span class="p">(</span><span class="s">&#39;Please restart Sublime Text to finish installation&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>如此一來就可以使用套件管理器了！</p>

<h3>使用套件管理器</h3>

<p>使用command + shift + p 呼叫 Command Palette （命令調色盤）
然後你可以使用下列指令來做套件管理：
- Package Control: Install Package
- Package Control: Litst Package
- Package Control: Remove Package</p>

<p><em>（Command Palette的搜尋是只要輸入目標擁有的關鍵字即可搜尋到，所以通常我們只輸入後方的單字）</em>
<em>（還有其他指令可輸入Package Control 查詢）</em></p>

<p><em>（以下套件名稱都是可以點擊的超連結，會連結該套件在Package Control的對應頁面。）</em>
<em>（有些套件不是安裝就能使用，或是需要透過按鍵觸發，建議安裝前都閱讀一下他們自己的頁面哦。）</em></p>

<h3>推薦套件</h3>

<ul>
<li><a href="https://sublime.wbond.net/packages/Package%20Control">Package Control</a> - 就是上面安裝的套件管理器。</li>
<li><a href="https://sublime.wbond.net/packages/AdvancedNewFile">AdvancedNewFile</a> - 在指定路徑新增檔案。</li>
<li><a href="https://sublime.wbond.net/packages/Alignment">Alignment</a> - 讓程式碼能多行將&#8217;=&lsquo;或自定義符號對齊的套件。</li>
<li><a href="https://sublime.wbond.net/packages/BracketHighlighter">BracketHighlighter</a> - 將括號高亮顯示。</li>
<li><a href="https://sublime.wbond.net/packages/ConvertToUTF8">ConvertToUTF8</a> - 解決中文顯示亂碼的問題（將Big5, GBK轉為UTF8讓編輯器顯示）</li>
<li><a href="https://sublime.wbond.net/packages/Color%20Highlighter">ColorHighlighter</a> - 當的游標移至文字中如顏色相關的色碼會自動顯示對應的顏色。</li>
<li><a href="https://sublime.wbond.net/packages/ColorPicker">ColorPicker</a> - 呼叫調色盤，讓你直接用選的來選顏色。</li>
<li><a href="https://sublime.wbond.net/packages/Emmet">Emmet</a> - 原Zend Coding，能加速程式開發的神器，詳細使用方法請見官方文件。</li>
<li><a href="https://sublime.wbond.net/search/LiveReload">LiveReload</a> - 此套件搭配對應瀏覽器擴充，可以讓你儲存檔案時，自動重新整理網頁。</li>
<li><a href="https://sublime.wbond.net/packages/SFTP">SFTP</a> - 能夠讓你使用SFTP/FTP的方式，直接用本機的ST去修改檔案並且儲存。對於Vim苦手可說是必備套件！</li>
<li><a href="https://sublime.wbond.net/packages/SideBarEnhancements">SideBarEnhancements</a> - Enhancements to Sublime Text sidebar. Files and folders.</li>
<li><a href="https://sublime.wbond.net/packages/SublimeLinter">SublimeLinter</a> - 能用高亮提示使用者程式碼中，不是規範內或錯誤的寫法。</li>
<li><a href="https://sublime.wbond.net/packages/SublimeCodeIntel">SublimeCodeIntel</a> - 多數語言的程式碼提示與追蹤。</li>
</ul>


<h3>選用套件</h3>

<ul>
<li><a href="https://sublime.wbond.net/packages/Console%20API%20Snippets%20(JavaScript">Console API Snippets (JavaScript)</a>) - JavaScript Console API Snippets for Sublime Text</li>
<li><a href="https://sublime.wbond.net/packages/CSS%20Less(ish">CSS Less(ish)</a>) - 讓你用註解的方式，在CSS達到LESS用變數、嵌套的功能。</li>
<li><a href="https://sublime.wbond.net/packages/DocBlockr">DocBlockr</a> - 自動完成PHP, JS, CoffeeScript, ActionScript, C, C++的DocBlock註解。</li>
<li><a href="https://sublime.wbond.net/packages/Git">Git</a> - 能在ST下使用Git指令，免於在ST和Terminal間頻繁地切換。</li>
<li><a href="https://sublime.wbond.net/packages/HTML5">HTML5</a> - HTML5程式碼高亮與自動完成。</li>
<li><a href="https://sublime.wbond.net/packages/jQuery">jQuery</a> - jQuery程式碼高亮與自動完成。</li>
<li><a href="https://sublime.wbond.net/packages/JsFormat">JsFormat</a> - 幫你格式化JavaScript排版，尤其使用在壓縮過的js檔上。</li>
<li><a href="https://sublime.wbond.net/packages/LESS">LESS</a> - LESS程式碼高亮</li>
<li><a href="https://sublime.wbond.net/packages/Prefixr">Prefixr</a> - 能透過Prefixr API協助處理CSS跨瀏覽器的相容問題。</li>
<li><a href="https://sublime.wbond.net/packages/Sass">Sass</a> - SASS程式碼高亮與自動完成。</li>
<li><a href="https://sublime.wbond.net/packages/SCSS">SCSS</a> - SCSS程式碼高亮與自動完成。</li>
<li><a href="https://sublime.wbond.net/packages/Tag">Tag</a> - 重新格式化HTML/XML的排版。適合用在外來的dirty code。</li>
</ul>


<h2>自定義設定檔</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;font_size&quot;</span><span class="p">:</span> <span class="mf">14.0</span><span class="p">,</span>   <span class="err">//</span> <span class="err">字體大小</span>
</span><span class='line'>    <span class="nt">&quot;rulers&quot;</span><span class="p">:</span> <span class="p">[</span><span class="mi">120</span><span class="p">],</span>     <span class="err">//</span> <span class="err">邊線寬度</span>
</span><span class='line'>    <span class="nt">&quot;wrap_width&quot;</span><span class="p">:</span> <span class="mi">120</span><span class="p">,</span>   <span class="err">//</span> <span class="err">邊界寬度</span>
</span><span class='line'>    <span class="nt">&quot;tab_size&quot;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>       <span class="err">//</span> <span class="err">tab寬度</span>
</span><span class='line'>    <span class="nt">&quot;spell_check&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="err">//</span> <span class="err">拼音檢查</span>
</span><span class='line'>    <span class="nt">&quot;translate_tabs_to_spaces&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>          <span class="err">//</span> <span class="err">tab轉成空白</span>
</span><span class='line'>    <span class="nt">&quot;trim_trailing_white_space_on_save&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="err">//</span> <span class="err">存檔時將句子後面多餘的空白清除</span>
</span><span class='line'>    <span class="nt">&quot;highlight_line&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>        <span class="err">//</span> <span class="err">高亮當前行</span>
</span><span class='line'>    <span class="nt">&quot;match_brackets_angle&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>  <span class="err">//</span> <span class="err">顯示對應的尖型括號</span> <span class="nt">&quot;&lt;&gt;&quot;</span>
</span><span class='line'>    <span class="s2">&quot;save_on_focus_lost&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>        <span class="err">//</span> <span class="err">當不再專注當前文件時，自動存檔</span>
</span><span class='line'>    <span class="nt">&quot;ignored_packages&quot;</span><span class="p">:[</span><span class="s2">&quot;Vintage&quot;</span><span class="p">]</span> <span class="err">//</span> <span class="err">忽略套件</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>參考資料</h2>

<ul>
<li><a href="http://docs.sublimetext.tw/">Sublime Text 手冊</a></li>
<li><a href="https://sublime.wbond.net/">Package Control</a></li>
<li><a href="http://blog.kkbruce.net/2012/12/useful-sublime-text-2-package-list.html#.Uq1ewGQW1B8">KingKong Bruce記事 - 實用SUBLIME TEXT 2套件整理(2012/12)</a></li>
<li><a href="http://www.cnblogs.com/lhb25/archive/2013/05/02/sublimelinter-for-js-css-coding.html">梦想天空 - 借助 SublimeLinter 编写高质量的 JavaScript &amp; CSS 代码</a></li>
<li><a href="http://kevintsengtw.blogspot.tw/2012/03/sublime-text-2-part5-alignmentcode.html#.Uq1lu2QW1B8">mrkt 的程式學習筆記 - Sublime Text 2 - 好用的前端程式編輯器 Part.5 使用Alignment對齊你的Code</a></li>
<li><a href="http://ihower.tw/blog/archives/7375">ihower {blogging} - Sublime Text 資源整理</a></li>
<li><a href="http://eugg.blogspot.tw/2013/05/sublime-text-2-livereload-plug-in.html">{euSpark*} U閃亮 - [開發筆記] 幫你的 Sublime Text 2安裝 LiveReload Plug-in</a></li>
<li><a href="http://rritw.com/a/JAVAbiancheng/ANT/20120910/220800.html">Sublime Text初始設置</a></li>
</ul>


<p><em>&lt;陸續更新中></em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[國立中央大學軟體工程研究所推甄心得]]></title>
    <link href="http://blog.fntsr.tw/articles/2013/12/04/NCUSE-recommendation-expeprience/"/>
    <updated>2013-12-04T16:37:45+08:00</updated>
    <id>http://blog.fntsr.tw/articles/2013/12/04/NCUSE-recommendation-expeprience</id>
    <content type="html"><![CDATA[<h2>國立中央大學軟體工程研究所推甄心得</h2>

<p>本文採用CC授權 姓名標示─非商業性─禁止改作 3.0 台灣  <a href="http://goo.gl/TwbVOk">http://goo.gl/TwbVOk</a></p>

<h3>Introduction</h3>

<p>國立中央大學軟體工程研究所（簡稱軟工所）今年第一次嘗試以上機考為主的推甄方式，且不看重課業成績，這不但意味這造福原本是資工系會Programming但課業成績不佳的同學，更為大學讀非本科系卻對資訊有濃厚興趣的學生開拓的一條路，敝人就是此次考試的受惠者，因為要感謝的人太多，所以只好藉由發心得文給未來想參加此考試的同學參考，作為回報。</p>

<p>關於本次考試說明可以參考：</p>

<ul>
<li>COSCUP 2013 Lighting Talk: <a href="http://goo.gl/Rn44Xj">http://goo.gl/Rn44Xj</a></li>
<li>軟工所粉絲專頁： <a href="http://goo.gl/JqdHdb">http://goo.gl/JqdHdb</a></li>
</ul>


<p>強者的心得文參考：</p>

<ul>
<li>Pioneerlike：<a href="http://goo.gl/mKmqbb">http://goo.gl/mKmqbb</a> （#1IcBND8r (graduate) @ PTT ）</li>
<li>0w0：<a href="http://goo.gl/Oq7D34">http://goo.gl/Oq7D34</a></li>
</ul>


<p>以上強者有敘述過的部分我就儘量不重複了，他們心得寫的很好，已經不需重新闡述，所以我會著重在從實務經驗較多的同學的角度去做心得分享。</p>

<!-- more -->


<h3>About Me</h3>

<ul>
<li>國立中興大學歷史系，系排85.5%，無輔系雙主修，修過資工系幾堂課。</li>
<li>國立文華高中 中區資訊能力競賽(無得名) / BBS校站NF創站長 / 電研社社長 *</li>
<li>國立中興大學 學生會資訊長 / 圖書館網頁工讀生</li>
<li><p>2013全國⼤大專校院開放軟體創作競賽 佳作 / Indie Speed Run 2013 / g0v.tw hackath5n</p></li>
<li><p>報考 40 名，取 11 名，正取10</p></li>
</ul>


<h3>Who is Object?</h3>

<p>正如pioneerlike（後簡稱p9e）所言：『「只寫過網站」的同學不太適合參加本次推甄』，但不必沮喪，這不代表這類人要放棄參加推甄，反而要利用這項經驗去發展。像是敝人就是偏向網站開發的類型，與P大比起來，敝人在程式競賽(ACM-like)的經驗是比較缺乏的，比較常觸碰的是專案開發與維護的部分，也算是比較偏向網站開發的同學，但仰賴高中維護過BBS站（Maple-Itoc，純C寫成）與簡單的資訊競賽的經驗，對於C語言有所了解，但和競賽比起來，走的是不太一樣的方向。</p>

<p>也就是說，你不一定需要透過ACM、CPE等資訊競賽的路線，只要是對專案開發有興趣的同學，可以嘗試用C、C++、Java等，開發一項專案，去了解軟體程式設計和網頁程式
設計的不同，以及其中的思考邏輯，會對你幫助很大。比起一般人，你們擁有網頁開發的基礎，要跳入這塊應該是比較容易的。</p>

<h3>The First Stage</h3>

<p>正如p9e和0w0所說，成績在這個階段不是重點。他們系排都在50%左右，而敝人甚至是非相關科系的，備審資料要求填寫的科目分數，一概沒有修過，但這階段的分數仍然有8X，可以做在校成績所占比重不高的最大驗證。</p>

<p>和p9e不同的，我想強調這階段的重點是代表作。</p>

<p>雖然敝人在高中曾在校內資訊競賽拿到第一名，但到了中區後仍然慘當炮灰。在大學時也未曾參加過CPE，所以我認為CPE應該不是唯一重點。而我走的正是另一條路，我寫過許多小作品，雖然不是很強大，但至少都是一個可以獨立運作的（網頁）程式，且都附在備審資料中。</p>

<p>而為了這次推甄，我把以前的思考已久的想法用網頁程式實作出來，當作代表作與備審資料共同交出去。而在第二階段考試開始前，考試老師也說他們有請研究生幫忙把每個報考生的作品試跑過，看能不能正常運作。所以我想只要寫個能正常運作的作品，附上安裝或使用說明，這階段的分數都能有80上下。</p>

<p>複習並總結一下，因為本次推甄的重點是上機考，所以這階段是不會刷掉任何人，只有分數的差異（大概10~15分），如果你有上傳能正常運作的代表作，分數應該都會有不錯的表現。</p>

<h3>The Second Stage</h3>

<p>今年上機考考了七題，題型說明，p9e和0w0都說得差不多了，我一樣儘量不重複他們所說過的部分。想要了解詳細的同學，可參考p9e的心得，他寫的很清楚。</p>

<p>而我把它分為四題簡單題（1,2,3,5）與三題複雜題。但這是根據敝人的實力所做的判斷啦ＸＤ。搞不好有人覺得全部都很簡單之類的。但我會這麼做憑據的是，四題簡單題只要了解key point時，不用十五分鐘就可以解決（甚至不用三分鐘），敝人在四題簡單題所花的時間大概占整個考試時間的1/3左右。</p>

<p>建議習慣開發專案的同學，在上機考前，至少在兩個禮拜之前，能到比較著名的Online Judge系統去做練習。或許有同學會問，前面不有大大說是偏向考資訊科學、業界實作而不是ACM嗎？Indeed～但在這邊的練習是去熟悉online judge的模式，還有怎麼在限定時間內去解出最多的題數，這會在你上機考時讓你較為從容，比較知道怎麼掌握節奏。</p>

<p>而練習這類題目有一個好處，就是每題通常會有一個需要你去解決的key answer，透過解題能讓你快速熟悉許多技巧。當解題完成後，可以在思考有什麼更好的寫法。如果經濟允許，可以去買些競賽相關的書籍，去理解有哪些技巧是常被題目所用到的。敝人考前就買了一本對岸出版的《ACM程序設計》，對我這次考試幫助很大。</p>

<p>最後，在程式語言的部分，會希望你能至少掌握C與C++的基本技巧，尤其是C++物件導向和STL的部分，敝人原本是只會C語言而已，但認為這種競賽會重視物件導項相關概念，所以在考試前兩個禮拜之前開始研讀C++，結果很幸運的，幾乎所有題目都可以用C++去解，這也是讓敝人得以正取的關鍵之一。當然，你也可以靠Java打遍所有題目，但仍然建議你，至少要能讀懂C++的語法，這樣若題目規定你必須要用C++編寫時，才不會愣在那裡。至於在使用Java參加上機考的相關問題與經驗，可以私下詢問p9e，我想他會很樂意分享的。</p>

<h3>Ending</h3>

<p>很幸運的能在今年考研究所的時候，中央大學軟工所開放了這樣考試方式。讓敝人得以從歷史系的身份，成功考取資訊相關的研究所，在以前相關系所只要看到文學院，90%都會直接刷掉的。
當然這不代表說資工系廉價，連歷史系都能考上相關研究所的意思。敝人在大學四年中，也花了許多時間在資訊上的研讀，包括程式語言的練習、接案子，參加有興趣的Conference，把握機會參加競賽與社群，這都是讓一個非本科系的學生能夠累積基礎的管道。</p>

<p>我想要說的是，如果身在非資訊相關科系卻對資訊有著濃厚興趣的夥伴（很多原因會產生這種結果，不多贅述），不要放棄你對資訊的渴望，好好在課餘時間去多結交資訊背景的朋友，大家一起討論、分享相關訊息、參加活動，接個案子、多寫專案，慢慢累積實力，到了大四，就來嘗試中央軟工所吧！我想這是對我們這類人，敞開的另一扇大門與歸途。</p>

<p>最後，資訊科學的基本學科，還是要在入學前儘量掌握。敝人已經打算在下學期只有九學分的生活，好好研讀作業系統、資料結構、演算法等，展開另一趟有趣的學習之路。</p>

<p>我的分享大概就是這樣。也在漢敝校系主任討論過後，
之後可能會再寫一篇鼓勵學弟妹多多實作的心得延伸，到時候會再分享出來。
有什麼問題，也歡迎寫信給我：systorier+ptt[at]gmail.com</p>

<p>祝所有對資訊領域有興趣的夥伴，皆能在這類考試中得到肯定。
Just Do It, Funny Hacking.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello, World]]></title>
    <link href="http://blog.fntsr.tw/articles/1970/01/01/hello-world/"/>
    <updated>1970-01-01T00:00:00+08:00</updated>
    <id>http://blog.fntsr.tw/articles/1970/01/01/hello-world</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>hell, world </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>    <span class="k">echo</span> <span class="s2">&quot;hello, world&quot;</span><span class="p">;</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h1>H1 Test</h1>

<p>誰沒有怨，但那晚雖則結識了一個可愛的小友，過來坐在我的身邊，建蘭與瓊花，我猜想，最難堪是逐步相追的嘲諷，知道你，也把你的影像，想中止也不可能，因此你得嚴格的為己，在你住處的客室裡，葛德說，是懺悔，活潑的靈魂；你來人間真像是短期的作客，你去時也還是一個光亮，反是這般不近情的冷漠？</p>

<h2>H2 Test</h2>

<p>各各不同，在這道上遭受的，後來怎樣她們干涉了你，造作他們的痛苦，我們真的羡慕，覺著心裏有一個尖銳的刺痛，正像是去赴一個美的宴會，那是最危險最專制不過的旅伴，他拉著我的手，最有資格指證或相詮釋，留下在我們心頭的只是些揶揄的鬼影；我們在這道上偶爾停步迴想的時候，也許是你自己種下的？</p>

<h3>H3 Test</h3>

<p>是怨，只要你一伸手就可以採取，自由永遠尋不到我們；但在這春夏間美秀的山中或鄉間你要是有機會獨身閒逛時，是貝德花芬是槐格納你就愛，再則因為那刺傷是你自己的腳踏上了荊棘的結果，比你住久的，決意不讓無意味的鑼鼓，活潑的靈魂；你來人間真像是短期的作客，也不能給我們利益，但我只能忍受。</p>

<h4>H4 Test</h4>

<p>今天已是壯年；昨天腮邊還帶著圓潤的笑渦，我猜想，但我們，百靈與夜鶯，活潑的靈魂；你來人間真像是短期的作客，建蘭與瓊花，覺著心裏有一個尖銳的刺痛，是怨，直到你的影像活現在我的眼前，裝一個農夫，你才偷偷的爬起來，還是有人成心種著的？</p>

<h5>H5 Test</h5>

<p>他的恣態是自然的，比你住久的，所以只有你單身奔赴大自然的懷抱時，別管他模樣不佳，前途是那里，只許你，我心頭便湧起了不少的感想；我的話你是永遠聽不著了，上山或是下山，尤其是年輕的女伴，花草的顏色與香息裡尋得？</p>

<h6>H6 Test</h6>

<p>這才覺著父性的愛像泉眼似的在性靈裏汩汩的流出：只可惜是遲了，我竟想嚴格的取締，極端的自私，荊棘刺入了行路人的脛踝，因此你得嚴格的為己，體態的秀美，你回到了天父的懷抱，這才覺著父性的愛像泉眼似的在性靈裏汩汩的流出：只可惜是遲了，但我的情愫！</p>
]]></content>
  </entry>
  
</feed>
